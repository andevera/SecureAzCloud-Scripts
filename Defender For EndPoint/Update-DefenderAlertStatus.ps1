<#
.SYNOPSIS
    Update the status of a Microsoft Defender for Endpoint alert.

.DESCRIPTION
    This script uses Microsoft Graph API to update the status of a specific security alert generated by Microsoft Defender for Endpoint.

.PARAMETER AlertId
    The unique identifier of the alert to update.

.PARAMETER Status
    The new status to apply to the alert (e.g., "resolved").

.PARAMETER AppId
    The Application (client) ID of the Azure AD app.

.PARAMETER TenantId
    The Directory (tenant) ID.

.PARAMETER CertThumbprint
    The certificate thumbprint for authentication.

.EXAMPLE
    .\Update-DefenderAlertStatus.ps1 -AlertId "YourAlertId" -Status "resolved" -AppId "YourAppId" -TenantId "YourTenantId" -CertThumbprint "YourCertThumbprint"

#>
param (
    [Parameter(Mandatory = $true)]
    [string]$AlertId,

    [Parameter(Mandatory = $true)]
    [string]$Status,

    [Parameter(Mandatory = $true)]
    [string]$AppId,

    [Parameter(Mandatory = $true)]
    [string]$TenantId,

    [Parameter(Mandatory = $true)]
    [string]$CertThumbprint
)

Connect-MgGraph -AppId $AppId -TenantId $TenantId -CertificateThumbprint $CertThumbprint -Scopes "SecurityEvents.ReadWrite.All" -NoWelcome

# Example using client secret (uncomment to use):
# Connect-MgGraph -ClientId $AppId -TenantId $TenantId -ClientSecret "YourClientSecret" -Scopes "SecurityEvents.ReadWrite.All" -NoWelcome

Write-Host "Updating alert status..."
$body = @{
    status = $Status
} | ConvertTo-Json

Invoke-MgGraphRequest -Uri "https://graph.microsoft.com/v1.0/security/alerts/$AlertId" -Method PATCH -Body $body

Disconnect-MgGraph
